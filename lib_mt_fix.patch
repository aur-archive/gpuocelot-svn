--- scripts/build_environment.py	2013-04-02 17:19:10.414077836 +0200
+++ scripts/build_environment_fixed.py	2013-04-02 12:00:31.932313645 +0200
@@ -114,7 +114,7 @@
 	elif os.name == 'posix':
 		ext = ""
 		if os.path.exists(os.path.join(lib_path, 'libboost_system-mt.so')):
-			ext = "-mt"
+			ext = ""
 			
 		libs = ['-lboost_system' + ext, '-lboost_filesystem' + ext,
 			'-lboost_thread' + ext]
@@ -302,15 +302,15 @@
 # a compiler switch of interest to the specific switch implementing the feature
 gCompilerOptions = {
 		'gcc' : {'warn_all' : '-Wall',
-			'warn_errors' : '-Werror',
+			'warn_errors' : '-Wall',
 			'optimization' : '-O2', 'debug' : '-g', 
 			'exception_handling' : '', 'standard': ''},
 		'g++' : {'warn_all' : '-Wall',
-			'warn_errors' : '-Werror',
+			'warn_errors' : '-Wall',
 			'optimization' : '-O2', 'debug' : '-g', 
 			'exception_handling' : '', 'standard': '-std=c++0x'},
 		'c++' : {'warn_all' : '-Wall',
-			'warn_errors' : '-Werror',
+			'warn_errors' : '-Wall',
 			'optimization' : '-O2', 'debug' : '-g',
 			'exception_handling' : '',
 			'standard': ['-stdlib=libc++', '-std=c++0x', '-pthread']},
@@ -516,7 +516,7 @@
 		allowed_values = ('release', 'debug')))
 
 	# add a variable to treat warnings as errors
-	vars.Add(BoolVariable('Werror', 'Treat warnings as errors', 1))
+	vars.Add(BoolVariable('Wall', 'Treat warnings as errors', 1))
 
 	# add a variable to handle warnings
 	vars.Add(BoolVariable('Wall', 'Enable all compilation warnings', 1))
@@ -596,11 +596,11 @@
 
 	# get C compiler switches
 	env.AppendUnique(CFLAGS = getCFLAGS(env['mode'], env['Wall'], \
-		env['Werror'], env.subst('$CC')))
+		env['Wall'], env.subst('$CC')))
 
 	# get CXX compiler switches
 	env.AppendUnique(CXXFLAGS = getCXXFLAGS(env['mode'], env['Wall'], \
-		env['Werror'], env.subst('$CXX')))
+		env['Wall'], env.subst('$CXX')))
 
 	# get linker switches
 	env.AppendUnique(LINKFLAGS = getLINKFLAGS(env['mode'], env.subst('$LINK')))
--- SConscript	2013-04-02 19:48:47.703541448 +0200
+++ SConscript_fixed	2013-04-02 20:04:00.584618366 +0200
@@ -199,7 +199,7 @@
 
 # Create the ocelot unit tests
 
-test_libs = ['-lboost_system-mt', '-lboost_filesystem-mt']
+test_libs = ['-lboost_system', '-lboost_filesystem']
 
 level_map = { 'none' : 0, 'basic' : 1, 'full' : 2 }
 enabled_tests = []
